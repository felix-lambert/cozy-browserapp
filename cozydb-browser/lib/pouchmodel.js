// Generated by CoffeeScript 1.10.0
(function() {
  var Model, PouchdbBackedModel, pouchdbDataAdapter,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Model = require('./model');

  pouchdbDataAdapter = {
    find: function(id, callback) {
      id = id + '';
      return PouchdbBackedModel.db.get(id, function(err, doc) {
        if (err) {
          return callback(err);
        } else if (doc == null) {
          return callback(null, null);
        } else {
          return callback(null, doc);
        }
      });
    }
  };

  ({
    create: function(attributes, callback) {
      var func;
      if ((attributes.id != null) || (attributes._id != null)) {
        if (!attributes.id) {
          attributes.id = attributes._id;
        }
        if (!attributes._id) {
          attributes._id = attributes.id;
        }
        func = 'put';
      } else {
        attributes._id = attributes.id = uuid.v4().split('-').join('');
        func = 'post';
      }
      return PouchdbBackedModel.db[func](attributes, function(err, response) {
        if (err) {
          return callback(err);
        } else if (!response.ok) {
          return callback(new Error('An error occured while creating document.'));
        } else {
          return callback(null, {
            id: response.id
          });
        }
      });
    }
  });

  module.exports = PouchdbBackedModel = (function(superClass) {
    extend(PouchdbBackedModel, superClass);

    function PouchdbBackedModel() {
      return PouchdbBackedModel.__super__.constructor.apply(this, arguments);
    }

    PouchdbBackedModel.adapter = pouchdbDataAdapter;

    PouchdbBackedModel.cast = function() {
      if (!this.__addedToSchema) {
        this.__addedToSchema = true;
        this.schema._id = String;
        this.schema._attachments = Object;
        this.schema._rev = String;
        this.schema.id = String;
        this.schema.docType = String;
        this.schema.binaries = Object;
      }
      return PouchdbBackedModel.__super__.constructor.cast.apply(this, arguments);
    };

    return PouchdbBackedModel;

  })(Model);

}).call(this);
