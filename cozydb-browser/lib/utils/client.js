// Generated by CoffeeScript 1.10.0
var askForToken, eventListening, playRequest;

eventListening = function(action) {
  return function(e) {
    window.removeEventListener('message', eventListening);
    action(e.data);
  };
};

askForToken = function() {
  return window.parent.postMessage({
    action: 'getToken'
  }, '*');
};

module.exports = {
  get: function(path, attributes, callback) {
    return playRequest('GET', path, attributes, function(error, body, response) {
      return callback(error, body, response);
    });
  },
  post: function(path, attributes, callback) {
    return playRequest('POST', path, attributes, function(error, body, response) {
      return callback(error, body, response);
    });
  },
  put: function(path, attributes, callback) {
    console.log('put');
    return playRequest('PUT', path, attributes, function(error, body, response) {
      return callback(error, body, response);
    });
  },
  del: function(path, attributes, callback) {
    return playRequest('DELETE', path, attributes, function(error, body, response) {
      return callback(error, body, response);
    });
  }
};

playRequest = function(method, path, attributes, callback) {
  var auth, xhr;
  auth = null;
  askForToken();
  xhr = new XMLHttpRequest;
  xhr.open(method, "/ds-api/" + path, true);
  window.addEventListener('message', eventListening(function(intent) {
    return auth = intent;
  }), false);
  xhr.onload = function() {
    return callback(null, xhr.response, xhr);
  };
  xhr.onerror = function(e) {
    var err;
    err = 'Request failed : #{e.target.status}';
    return callback(err);
  };
  return setTimeout((function() {
    xhr.setRequestHeader('Content-Type', 'application/json');
    xhr.setRequestHeader('Authorization', 'Basic ' + btoa(auth.appName + ':' + auth.token));
    if (attributes != null) {
      xhr.send(JSON.stringify(attributes));
    } else {
      xhr.send();
    }
  }), 100);
};
