// Generated by CoffeeScript 1.10.0
var askForToken, playRequest;

askForToken = function() {
  return window.parent.postMessage({
    action: 'getToken'
  }, '*');
};

module.exports = {
  get: function(path, attributes, callback) {
    return playRequest('GET', path, attributes, function(error, body, response) {
      return callback(error, body, response);
    });
  },
  post: function(path, attributes, callback) {
    return playRequest('POST', path, attributes, function(error, body, response) {
      return callback(error, body, response);
    });
  },
  put: function(path, attributes, callback) {
    console.log('put');
    return playRequest('PUT', path, attributes, function(error, body, response) {
      return callback(error, body, response);
    });
  },
  del: function(path, attributes, callback) {
    return playRequest('DELETE', path, attributes, function(error, body, response) {
      return callback(error, body, response);
    });
  }
};

playRequest = function(method, path, attributes, callback) {
  var eventListening, getTokenFromHome, sendRequest, xhr;
  xhr = new XMLHttpRequest;
  xhr.open(method, "/ds-api/" + path, true);
  eventListening = function(action) {
    return function(e) {
      window.removeEventListener('message', eventListening);
      action(e.data);
    };
  };
  askForToken();
  getTokenFromHome = function(xhr, method, path, attributes, callback) {
    return window.addEventListener('message', eventListening(function(intent) {
      return callback(method, path, attributes, intent);
    }), false);
  };
  sendRequest = function(xhr, method, path, attributes, auth) {
    xhr.onload = function() {
      return callback(null, xhr.response, xhr);
    };
    xhr.onerror = function(e) {
      var err;
      err = 'Request failed : #{e.target.status}';
      return callback(err);
    };
    xhr.setRequestHeader('Content-Type', 'application/json');
    xhr.setRequestHeader('Authorization', 'Basic ' + btoa(auth.appName + ':' + auth.token));
    if (attributes != null) {
      xhr.send(JSON.stringify(attributes));
    } else {
      xhr.send();
    }
  };
  return getTokenFromHome(xhr, method, path, attributes, sendRequest);
};
