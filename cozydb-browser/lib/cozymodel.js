// Generated by CoffeeScript 1.10.0
(function() {
  var CozyBackedModel, Model, client, cozyDataAdapter,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  client = require('./utils/client');

  Model = require('./model');

  cozyDataAdapter = {
    find: function(id, callback) {
      return client.get("data/" + id + "/", function(error, response) {
        if (error) {
          return callback(error);
        } else if (response.statusCode === 404) {
          return callback(null, null);
        } else {
          return callback(null, response);
        }
      });
    },
    create: function(attributes, callback) {
      var path;
      path = "data/";
      if (attributes.id != null) {
        path += attributes.id + "/";
        delete attributes.id;
        return callback(new Error('cant create an object with a set id'));
      }
      return client.post(path, attributes, function(error, response) {
        if (error) {
          return callback(error);
        } else if (response.statusCode === 409) {
          return callback(new Error("This document already exists"));
        } else if (response.statusCode !== 201) {
          return callback(new Error("Server error occured."));
        } else {
          response.id = response._id;
          return callback(null, body);
        }
      });
    }
  };

  module.exports = CozyBackedModel = (function(superClass) {
    extend(CozyBackedModel, superClass);

    function CozyBackedModel() {
      return CozyBackedModel.__super__.constructor.apply(this, arguments);
    }

    CozyBackedModel.adapter = cozyDataAdapter;

    CozyBackedModel.cast = function() {
      if (!this.__addedToSchema) {
        this.__addedToSchema = true;
        this.schema._id = String;
        this.schema._attachments = Object;
        this.schema._rev = String;
        this.schema.id = String;
        this.schema.docType = String;
      }
      return CozyBackedModel.__super__.constructor.cast.apply(this, arguments);
    };

    return CozyBackedModel;

  })(Model);

}).call(this);
