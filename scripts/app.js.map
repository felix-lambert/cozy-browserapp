{"version":3,"sources":["app/app.module.coffee","app/scripts/Contact.Fctr.coffee","app/scripts/Cozysdk.Intf.coffee","app/scripts/Home.Ctrl.coffee"],"names":[],"mappings":"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","file":"scripts/app.js","sourcesContent":["appConfig = ($routeProvider) ->\n    for path of routeObject\n        $routeProvider.when path, routeObject[path]\n    $routeProvider.otherwise redirectTo: '/'\n\nangular.module('browserapp', [\n    'ngResource'\n    'ngRoute'\n]).config appConfig\n\nrouteObject = '/':\n    templateUrl: 'partials/home.html'\n    controller: 'HomeAngCtrl'\n\nappConfig.$inject = [\n    '$routeProvider'\n]","Contact = ($injector, $q) ->\n  \n    CozySdk = $injector.get 'CozySdk'\n\n    \n    {\n        send: (docType, data) ->\n            deferred = $q.defer()\n\n            promise = CozySdk.create(docType, data).then (res) ->\n                return CozySdk.find res._id\n            promise.then ((result) ->\n                deferred.resolve result\n            ), (error) ->\n                deferred.reject error\n            return deferred.promise\n\n        all: () ->\n            deferred = $q.defer()\n            $q.all([\n                CozySdk.defineRequest('Contact', 'all', 'function(doc) { emit(doc.n, null); }'),\n                CozySdk.runRequest('Contact', 'all')\n            ]).then ((result) ->\n                deferred.resolve result[1]\n            ), (error) ->\n                deferred.reject error\n            return deferred.promise\n    }\n\nangular.module('browserapp').factory 'Contact', Contact\nContact.$inject = ['$injector', '$q']\n\n# ---","CozySdk = ($rootScope, $q) ->\n  \n    \n    {\n        create: (docType, data) ->\n            deferred = $q.defer()\n            cozysdk.create docType, data, (err, res) ->\n                if err?\n                    console.log 'maybe do a cozy special error warning'\n                else\n                    $rootScope.$apply ->\n                        deferred.resolve res\n            return deferred.promise\n\n        find: (id) ->\n            deferred = $q.defer()\n            cozysdk.find id, (err, res) ->\n                if err?\n                    console.log 'maybe do a cozy special error warning'\n                else\n                    $rootScope.$apply ->\n                        callback res\n\n        exist: (id) ->\n            deferred = $q.defer()\n            cozysdk.exists id, (err, res) ->\n                if err?\n                    console.log 'maybe do a cozy special error warning'\n                else\n                    $rootScope.$apply ->\n                        deferred.resolve res\n            return deferred.promise\n\n        update: (docType, id, user) ->\n            deferred = $q.defer()\n            cozysdk.updateAttributes docType, id, user, (err, res) ->\n                if err?\n                    console.log 'maybe do a cozy special error warning'\n                else\n                    $rootScope.$apply ->\n                        deferred.resolve res\n            return deferred.promise\n\n        destroy: (id) ->\n            deferred = $q.defer()\n            cozysdk.destroy id, (err, res) ->\n                if err?\n                    console.log 'maybe do a cozy special error warning'\n                    deferred.reject 'oh no an error! try again'\n                else\n                    $rootScope.$apply ->\n                        deferred.resolve res\n            return deferred.promise\n\n        defineRequest: (docType, requestName, defined) ->\n            deferred = $q.defer()\n            cozysdk.defineRequest docType, requestName, defined, (err, res) ->\n                if err?\n                    console.log 'maybe do a cozy special error warning'\n                    deferred.reject 'oh no an error! try again'\n                else\n                    $rootScope.$apply ->\n                        deferred.resolve res\n            return deferred.promise\n\n        destroyRequest: () ->\n            deferred = $q.defer()\n            cozysdk.requestDestroy 'Contact', 'all', {startkey: 'z', endkey: 'z'}, (err, res) ->\n                if err?\n                    console.log 'maybe do a cozy special error warning'\n                    deferred.reject 'oh no an error! try again'\n                else\n                    $rootScope.$apply ->\n                        deferred.resolve res\n            return deferred.promise\n\n        runRequest: (docType, requestName) ->\n            deferred = $q.defer()\n            cozysdk.run docType, requestName, {}, (err, res) ->\n                if err?\n                    console.log 'maybe do a cozy special error warning'\n                    deferred.reject 'oh no an error! try again'\n                else\n                    res = JSON.parse \"#{res}\"\n                    console.log res\n                    $rootScope.$apply ->\n                        deferred.resolve res\n            return deferred.promise\n\n    }\n\nangular.module('browserapp').factory 'CozySdk', CozySdk\nCozySdk.$inject = ['$rootScope', '$q']\n\n# ---","HomeAngCtrl = ($injector, $scope) ->\n\n    Contact = $injector.get('Contact');\n    CozySdk = $injector.get 'CozySdk'\n\n    activate = () ->\n        Contact.all().then (res) ->\n            $scope.contacts = res\n\n    send = (user) ->\n        console.log 'send'\n        Contact.send('Contact', user).then (res) ->\n            $scope.contacts = res\n            activate()\n\n    update = (id, user) ->\n        console.log user\n        contactName = n: user.key\n        console.log contactName\n        CozySdk.update('Contact', id, contactName).then (res) ->\n            $scope.contacts = res\n            activate()\n\n    destroy = (id) ->\n        console.log 'destroy'\n        console.log id\n        CozySdk.destroy(id).then (res) ->\n            $scope.contacts = res\n            activate()\n\n    activate()\n    $scope.send = send\n    $scope.update = update\n    $scope.destroy = destroy\n\nangular.module('browserapp').controller 'HomeAngCtrl', HomeAngCtrl\nHomeAngCtrl.$inject = [\n    '$injector'\n    '$scope'\n]"]}