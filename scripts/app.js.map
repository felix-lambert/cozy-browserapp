{"version":3,"sources":["app/app.module.coffee","app/scripts/Contact.Fctr.coffee","app/scripts/Cozysdk.Intf.coffee","app/scripts/Home.Ctrl.coffee"],"names":[],"mappings":"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","file":"scripts/app.js","sourcesContent":["appConfig = ($routeProvider) ->\n    for path of routeObject\n        $routeProvider.when path, routeObject[path]\n    $routeProvider.otherwise redirectTo: '/'\n\nangular.module('browserapp', [\n    'ngResource'\n    'ngRoute'\n]).config appConfig\n\nrouteObject = '/':\n    templateUrl: 'partials/home.html'\n    controller: 'HomeAngCtrl'\n    resolve:\n      \tpreGetContacts: (Contact) ->\n        \tpromise = Contact.all()\n        \treturn promise   \n\nappConfig.$inject = [\n    '$routeProvider'\n]","Contact = ($injector, $q) ->\n  \n    CozySdk = $injector.get 'CozySdk'\n    {\n        send: (docType, data) ->\n            promise = CozySdk.create docType, data\n            return promise\n\n        all: () ->\n            CozySdk.defineRequest('Contact', 'all', 'function(doc) { emit(doc.n, null); }').then () ->\n                return CozySdk.runRequest 'Contact', 'all'\n    }\n\nangular.module('browserapp').factory 'Contact', Contact\nContact.$inject = ['$injector', '$q']\n\n# ---","CozySdk = ($rootScope, $q) ->\n    {\n        create: (docType, data) ->\n            deferred = $q.defer()\n            cozysdk.create docType, data, (err, res) ->\n                if err?\n                    console.log 'maybe do a cozy special error warning'\n                    deferred.reject new Error 'oh no an error in create! try again'\n                else\n                    deferred.resolve res\n            return deferred.promise\n\n        find: (id) ->\n            deferred = $q.defer()\n            cozysdk.find id, (err, res) ->\n                if err?\n                    console.log 'maybe do a cozy special error warning'\n                    deferred.reject new Error 'oh no an error in find! try again'\n                else\n                    deferred.resolve res\n            return deferred.promise\n\n        exist: (id) ->\n            deferred = $q.defer()\n            cozysdk.exists id, (err, res) ->\n                if err?\n                    console.log 'maybe do a cozy special error warning'\n                    deferred.reject new Error 'oh no an error in exists! try again'\n                else\n                    deferred.resolve res\n            return deferred.promise\n\n        update: (docType, id, user) ->\n            deferred = $q.defer()\n            cozysdk.updateAttributes docType, id, user, (err, res) ->\n                if err?\n                    console.log 'maybe do a cozy special error warning'\n                    deferred.reject new Error 'oh no an error in update! try again'\n                else\n                    deferred.resolve res\n            return deferred.promise\n\n        destroy: (id) ->\n            deferred = $q.defer()\n            cozysdk.destroy id, (err, res) ->\n                if err?\n                    console.log 'maybe do a cozy special error warning'\n                    deferred.reject new Error 'oh no an error in destroy! try again'\n                else\n                    deferred.resolve res\n            return deferred.promise\n\n        defineRequest: (docType, requestName, defined) ->\n            deferred = $q.defer()\n            cozysdk.defineRequest docType, requestName, defined, (err, res) ->\n                if err?\n                    console.log 'maybe do a cozy special error warning'\n                    deferred.reject new Error 'oh no an error in defineRequest! try again'\n                else\n                    deferred.resolve res\n            return deferred.promise\n\n        destroyRequest: () ->\n            deferred = $q.defer()\n            cozysdk.requestDestroy 'Contact', 'all', {startkey: 'z', endkey: 'z'}, (err, res) ->\n                if err?\n                    console.log 'maybe do a cozy special error warning'\n                    deferred.reject new Error 'oh no an error in destroyRequest! try again'\n                else\n                    deferred.resolve res\n            return deferred.promise\n\n        runRequest: (docType, requestName) ->\n            deferred = $q.defer()\n            cozysdk.run docType, requestName, {}, (err, res) ->\n                if err?\n                    console.log 'maybe do a cozy special error warning'\n                    deferred.reject new Error 'oh no an error in runRequest! try again'\n                else\n                    res = JSON.parse \"#{res}\"\n                    deferred.resolve res\n            return deferred.promise\n\n    }\n\nangular.module('browserapp').factory 'CozySdk', CozySdk\nCozySdk.$inject = ['$rootScope', '$q']\n\n# ---","HomeAngCtrl = ($injector, $scope, preGetContacts) ->\n\n    Contact = $injector.get 'Contact'\n    CozySdk = $injector.get 'CozySdk'\n\n    res = preGetContacts\n    console.log res\n    $scope.contacts = res\n\n    updateContactList = () ->\n        promise = Contact.all()\n        promise.then ((result) ->\n            # handle success\n            $scope.contacts = result\n        ), (error) ->\n            # handle error, exactly as if this was a separate catch in the chain.\n            $scope.error = error\n\n    send = (user) ->\n        promise = Contact.send 'Contact', user\n        promise.then ((res) ->\n            updateContactList()\n        ), (error) ->\n            $scope.error = error\n\n    update = (id, user) ->\n        contactName = n: user.key\n        promise = CozySdk.update 'Contact', id, contactName\n        promise.then ((res) ->\n            updateContactList()\n        ), (error) ->\n            $scope.error = error\n\n    destroy = (id) ->\n        promise = CozySdk.destroy id\n        promise.then ((res) ->\n            updateContactList()\n        ), (error) ->\n            $scope.error = error\n\n    $scope.send = send\n    $scope.update = update\n    $scope.destroy = destroy\n\nangular.module('browserapp').controller 'HomeAngCtrl', HomeAngCtrl\nHomeAngCtrl.$inject = [\n    '$injector'\n    '$scope'\n    'preGetContacts'\n]"]}